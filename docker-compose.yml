services:
  mongo:
    image: mongo:latest
    container_name: mongo
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
    volumes:
      - mongo-data:/data/db
      - ./mongod.conf:/etc/mongo/mongod.conf
  local-kms:
    image: nsmithuk/local-kms:latest
    container_name: local-kms
    ports:
      - "8080:8080"
    environment:
      AWS_REGION: ${AWS_REGION}
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}

  frontend:
    build:
      context: ./ui
      dockerfile: Dockerfile
    container_name: frontend
    ports:
      - "3000:3000"
    stdin_open: true
    tty: true
    environment:
      - REACT_APP_CA_URL=http://localhost:5000
      - UI_PORT=3000
    depends_on:
      - backend

  backend:
    build:
      context: ./ca
      dockerfile: Dockerfile
    container_name: backend
    ports:
      - "5000:5000"
    environment:
      - MONGO_URI=mongodb://${MONGO_USERNAME}:${MONGO_PASSWORD}@mongo:27017/?authSource=admin
      - KMS_ENDPOINT=http://local-kms:8080
      - AWS_REGION=${AWS_REGION}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - CA_PORT=5000
      - CA_HOST=0.0.0.0
      - RESEND_API_KEY=${RESEND_API_KEY}
      - RESEND_FROM=${RESEND_FROM}
    depends_on:
      - mongo
      - local-kms
    volumes:
      - ./dev-certs:/certs

volumes:
  mongo-data:
    driver: local
